
state 0:

	program : . PROGRAM ID START LSPAR cmdSeq RSPAR 

	PROGRAM	shift 1

	program	goto 73

	.	error


state 1:

	program : PROGRAM . ID START LSPAR cmdSeq RSPAR 

	ID	shift 2


	.	error


state 2:

	program : PROGRAM ID . START LSPAR cmdSeq RSPAR 

	START	shift 3


	.	error


state 3:

	program : PROGRAM ID START . LSPAR cmdSeq RSPAR 

	LSPAR	shift 4


	.	error


state 4:

	program : PROGRAM ID START LSPAR . cmdSeq RSPAR 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 15
	RSPAR	reduce by rule 2
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11
	READ	shift 10
	WRITE	shift 9

	cmdSeq	goto 8
	exp	goto 7
	cmd	goto 6
	decl	goto 5

	.	error


state 5:

	cmd : decl .  (reduce by rule 4)

	EOS	reduce by rule 4


	.	error


state 6:

	cmdSeq : cmd . EOS cmdSeq 

	EOS	shift 19


	.	error


state 7:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . OR exp 
	exp : exp . TIMES exp 
	exp : exp . DIV exp 
	exp : exp . MOD exp 
	exp : exp . AND exp 
	exp : exp . LT exp 
	exp : exp . LEQ exp 
	exp : exp . EQ exp 
	exp : exp . GT exp 
	exp : exp . GEQ exp 
	exp : exp . NEQ exp 
	cmd : exp .  (reduce by rule 3)

	EOS	reduce by rule 3
	AND	shift 32
	LT	shift 31
	LEQ	shift 30
	EQ	shift 29
	GT	shift 28
	GEQ	shift 27
	NEQ	shift 26
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIV	shift 22
	MOD	shift 21
	OR	shift 20


	.	error


state 8:

	program : PROGRAM ID START LSPAR cmdSeq . RSPAR 

	RSPAR	shift 33


	.	error


state 9:

	cmd : WRITE . exp 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 35
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11

	exp	goto 34

	.	error


state 10:

	cmd : READ . ID 

	ID	shift 36


	.	error


state 11:

	exp : WHILE . exp DO LSPAR cmdSeq RSPAR ENDWH 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 35
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11

	exp	goto 37

	.	error


state 12:

	exp : NOT . exp 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 35
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11

	exp	goto 38

	.	error


state 13:

	exp : LPAR . exp RPAR 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 35
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11

	exp	goto 39

	.	error


state 14:

	exp : NEGATE . exp 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 35
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11

	exp	goto 40

	.	error


state 15:

	exp : ID .  (reduce by rule 10)
	decl : ID . ASSIGN exp 

	EOS	reduce by rule 10
	ASSIGN	shift 41
	AND	reduce by rule 10
	LT	reduce by rule 10
	LEQ	reduce by rule 10
	EQ	reduce by rule 10
	GT	reduce by rule 10
	GEQ	reduce by rule 10
	NEQ	reduce by rule 10
	PLUS	reduce by rule 10
	MINUS	reduce by rule 10
	TIMES	reduce by rule 10
	DIV	reduce by rule 10
	MOD	reduce by rule 10
	OR	reduce by rule 10


	.	error


state 16:

	exp : CONST .  (reduce by rule 8)

	THEN	reduce by rule 8
	EOS	reduce by rule 8
	RPAR	reduce by rule 8
	AND	reduce by rule 8
	LT	reduce by rule 8
	LEQ	reduce by rule 8
	EQ	reduce by rule 8
	GT	reduce by rule 8
	GEQ	reduce by rule 8
	NEQ	reduce by rule 8
	PLUS	reduce by rule 8
	MINUS	reduce by rule 8
	TIMES	reduce by rule 8
	DIV	reduce by rule 8
	MOD	reduce by rule 8
	OR	reduce by rule 8
	DO	reduce by rule 8


	.	error


state 17:

	exp : NUM .  (reduce by rule 9)

	THEN	reduce by rule 9
	EOS	reduce by rule 9
	RPAR	reduce by rule 9
	AND	reduce by rule 9
	LT	reduce by rule 9
	LEQ	reduce by rule 9
	EQ	reduce by rule 9
	GT	reduce by rule 9
	GEQ	reduce by rule 9
	NEQ	reduce by rule 9
	PLUS	reduce by rule 9
	MINUS	reduce by rule 9
	TIMES	reduce by rule 9
	DIV	reduce by rule 9
	MOD	reduce by rule 9
	OR	reduce by rule 9
	DO	reduce by rule 9


	.	error


state 18:

	exp : IF . exp THEN LSPAR cmdSeq RSPAR ELSE LSPAR cmdSeq RSPAR ENDIF 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 35
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11

	exp	goto 42

	.	error


state 19:

	cmdSeq : cmd EOS . cmdSeq 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 15
	RSPAR	reduce by rule 2
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11
	READ	shift 10
	WRITE	shift 9

	cmdSeq	goto 43
	exp	goto 7
	cmd	goto 6
	decl	goto 5

	.	error


state 20:

	exp : exp OR . exp 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 35
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11

	exp	goto 44

	.	error


state 21:

	exp : exp MOD . exp 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 35
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11

	exp	goto 45

	.	error


state 22:

	exp : exp DIV . exp 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 35
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11

	exp	goto 46

	.	error


state 23:

	exp : exp TIMES . exp 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 35
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11

	exp	goto 47

	.	error


state 24:

	exp : exp MINUS . exp 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 35
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11

	exp	goto 48

	.	error


state 25:

	exp : exp PLUS . exp 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 35
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11

	exp	goto 49

	.	error


state 26:

	exp : exp NEQ . exp 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 35
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11

	exp	goto 50

	.	error


state 27:

	exp : exp GEQ . exp 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 35
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11

	exp	goto 51

	.	error


state 28:

	exp : exp GT . exp 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 35
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11

	exp	goto 52

	.	error


state 29:

	exp : exp EQ . exp 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 35
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11

	exp	goto 53

	.	error


state 30:

	exp : exp LEQ . exp 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 35
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11

	exp	goto 54

	.	error


state 31:

	exp : exp LT . exp 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 35
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11

	exp	goto 55

	.	error


state 32:

	exp : exp AND . exp 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 35
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11

	exp	goto 56

	.	error


state 33:

	program : PROGRAM ID START LSPAR cmdSeq RSPAR .  (reduce by rule 0)

	EOF	reduce by rule 0


	.	error


state 34:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . OR exp 
	exp : exp . TIMES exp 
	exp : exp . DIV exp 
	exp : exp . MOD exp 
	exp : exp . AND exp 
	exp : exp . LT exp 
	exp : exp . LEQ exp 
	exp : exp . EQ exp 
	exp : exp . GT exp 
	exp : exp . GEQ exp 
	exp : exp . NEQ exp 
	cmd : WRITE exp .  (reduce by rule 6)

	EOS	reduce by rule 6
	AND	shift 32
	LT	shift 31
	LEQ	shift 30
	EQ	shift 29
	GT	shift 28
	GEQ	shift 27
	NEQ	shift 26
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIV	shift 22
	MOD	shift 21
	OR	shift 20


	.	error


state 35:

	exp : ID .  (reduce by rule 10)

	THEN	reduce by rule 10
	EOS	reduce by rule 10
	RPAR	reduce by rule 10
	AND	reduce by rule 10
	LT	reduce by rule 10
	LEQ	reduce by rule 10
	EQ	reduce by rule 10
	GT	reduce by rule 10
	GEQ	reduce by rule 10
	NEQ	reduce by rule 10
	PLUS	reduce by rule 10
	MINUS	reduce by rule 10
	TIMES	reduce by rule 10
	DIV	reduce by rule 10
	MOD	reduce by rule 10
	OR	reduce by rule 10
	DO	reduce by rule 10


	.	error


state 36:

	cmd : READ ID .  (reduce by rule 5)

	EOS	reduce by rule 5


	.	error


state 37:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . OR exp 
	exp : exp . TIMES exp 
	exp : exp . DIV exp 
	exp : exp . MOD exp 
	exp : exp . AND exp 
	exp : exp . LT exp 
	exp : exp . LEQ exp 
	exp : exp . EQ exp 
	exp : exp . GT exp 
	exp : exp . GEQ exp 
	exp : exp . NEQ exp 
	exp : WHILE exp . DO LSPAR cmdSeq RSPAR ENDWH 

	AND	shift 32
	LT	shift 31
	LEQ	shift 30
	EQ	shift 29
	GT	shift 28
	GEQ	shift 27
	NEQ	shift 26
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIV	shift 22
	MOD	shift 21
	OR	shift 20
	DO	shift 57


	.	error


state 38:

	exp : NOT exp .  (reduce by rule 11)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . OR exp 
	exp : exp . TIMES exp 
	exp : exp . DIV exp 
	exp : exp . MOD exp 
	exp : exp . AND exp 
	exp : exp . LT exp 
	exp : exp . LEQ exp 
	exp : exp . EQ exp 
	exp : exp . GT exp 
	exp : exp . GEQ exp 
	exp : exp . NEQ exp 

	THEN	reduce by rule 11
	EOS	reduce by rule 11
	RPAR	reduce by rule 11
	AND	reduce by rule 11
	LT	reduce by rule 11
	LEQ	reduce by rule 11
	EQ	reduce by rule 11
	GT	reduce by rule 11
	GEQ	reduce by rule 11
	NEQ	reduce by rule 11
	PLUS	reduce by rule 11
	MINUS	reduce by rule 11
	TIMES	reduce by rule 11
	DIV	reduce by rule 11
	MOD	reduce by rule 11
	OR	reduce by rule 11
	DO	reduce by rule 11


	.	error


state 39:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . OR exp 
	exp : exp . TIMES exp 
	exp : exp . DIV exp 
	exp : exp . MOD exp 
	exp : exp . AND exp 
	exp : exp . LT exp 
	exp : exp . LEQ exp 
	exp : exp . EQ exp 
	exp : exp . GT exp 
	exp : exp . GEQ exp 
	exp : exp . NEQ exp 
	exp : LPAR exp . RPAR 

	RPAR	shift 58
	AND	shift 32
	LT	shift 31
	LEQ	shift 30
	EQ	shift 29
	GT	shift 28
	GEQ	shift 27
	NEQ	shift 26
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIV	shift 22
	MOD	shift 21
	OR	shift 20


	.	error


state 40:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . OR exp 
	exp : exp . TIMES exp 
	exp : exp . DIV exp 
	exp : exp . MOD exp 
	exp : exp . AND exp 
	exp : exp . LT exp 
	exp : exp . LEQ exp 
	exp : exp . EQ exp 
	exp : exp . GT exp 
	exp : exp . GEQ exp 
	exp : exp . NEQ exp 
	exp : NEGATE exp .  (reduce by rule 25)

	THEN	reduce by rule 25
	EOS	reduce by rule 25
	RPAR	reduce by rule 25
	AND	reduce by rule 25
	LT	reduce by rule 25
	LEQ	reduce by rule 25
	EQ	reduce by rule 25
	GT	reduce by rule 25
	GEQ	reduce by rule 25
	NEQ	reduce by rule 25
	PLUS	reduce by rule 25
	MINUS	reduce by rule 25
	TIMES	reduce by rule 25
	DIV	reduce by rule 25
	MOD	reduce by rule 25
	OR	reduce by rule 25
	DO	reduce by rule 25


	.	error


state 41:

	decl : ID ASSIGN . exp 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 35
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11

	exp	goto 59

	.	error


state 42:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . OR exp 
	exp : exp . TIMES exp 
	exp : exp . DIV exp 
	exp : exp . MOD exp 
	exp : exp . AND exp 
	exp : exp . LT exp 
	exp : exp . LEQ exp 
	exp : exp . EQ exp 
	exp : exp . GT exp 
	exp : exp . GEQ exp 
	exp : exp . NEQ exp 
	exp : IF exp . THEN LSPAR cmdSeq RSPAR ELSE LSPAR cmdSeq RSPAR ENDIF 

	THEN	shift 60
	AND	shift 32
	LT	shift 31
	LEQ	shift 30
	EQ	shift 29
	GT	shift 28
	GEQ	shift 27
	NEQ	shift 26
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIV	shift 22
	MOD	shift 21
	OR	shift 20


	.	error


state 43:

	cmdSeq : cmd EOS cmdSeq .  (reduce by rule 1)

	RSPAR	reduce by rule 1


	.	error


state 44:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 14)
	exp : exp . TIMES exp 
	exp : exp . DIV exp 
	exp : exp . MOD exp 
	exp : exp . AND exp 
	exp : exp . LT exp 
	exp : exp . LEQ exp 
	exp : exp . EQ exp 
	exp : exp . GT exp 
	exp : exp . GEQ exp 
	exp : exp . NEQ exp 

	THEN	reduce by rule 14
	EOS	reduce by rule 14
	RPAR	reduce by rule 14
	AND	reduce by rule 14
	LT	shift 31
	LEQ	shift 30
	EQ	shift 29
	GT	shift 28
	GEQ	shift 27
	NEQ	shift 26
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIV	shift 22
	MOD	shift 21
	OR	reduce by rule 14
	DO	reduce by rule 14


	.	error


state 45:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . OR exp 
	exp : exp . TIMES exp 
	exp : exp . DIV exp 
	exp : exp . MOD exp 
	exp : exp MOD exp .  (reduce by rule 17)
	exp : exp . AND exp 
	exp : exp . LT exp 
	exp : exp . LEQ exp 
	exp : exp . EQ exp 
	exp : exp . GT exp 
	exp : exp . GEQ exp 
	exp : exp . NEQ exp 

	THEN	reduce by rule 17
	EOS	reduce by rule 17
	RPAR	reduce by rule 17
	AND	reduce by rule 17
	LT	reduce by rule 17
	LEQ	reduce by rule 17
	EQ	reduce by rule 17
	GT	reduce by rule 17
	GEQ	reduce by rule 17
	NEQ	reduce by rule 17
	PLUS	reduce by rule 17
	MINUS	reduce by rule 17
	TIMES	reduce by rule 17
	DIV	reduce by rule 17
	MOD	reduce by rule 17
	OR	reduce by rule 17
	DO	reduce by rule 17


	.	error


state 46:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . OR exp 
	exp : exp . TIMES exp 
	exp : exp . DIV exp 
	exp : exp DIV exp .  (reduce by rule 16)
	exp : exp . MOD exp 
	exp : exp . AND exp 
	exp : exp . LT exp 
	exp : exp . LEQ exp 
	exp : exp . EQ exp 
	exp : exp . GT exp 
	exp : exp . GEQ exp 
	exp : exp . NEQ exp 

	THEN	reduce by rule 16
	EOS	reduce by rule 16
	RPAR	reduce by rule 16
	AND	reduce by rule 16
	LT	reduce by rule 16
	LEQ	reduce by rule 16
	EQ	reduce by rule 16
	GT	reduce by rule 16
	GEQ	reduce by rule 16
	NEQ	reduce by rule 16
	PLUS	reduce by rule 16
	MINUS	reduce by rule 16
	TIMES	reduce by rule 16
	DIV	reduce by rule 16
	MOD	reduce by rule 16
	OR	reduce by rule 16
	DO	reduce by rule 16


	.	error


state 47:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . OR exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 15)
	exp : exp . DIV exp 
	exp : exp . MOD exp 
	exp : exp . AND exp 
	exp : exp . LT exp 
	exp : exp . LEQ exp 
	exp : exp . EQ exp 
	exp : exp . GT exp 
	exp : exp . GEQ exp 
	exp : exp . NEQ exp 

	THEN	reduce by rule 15
	EOS	reduce by rule 15
	RPAR	reduce by rule 15
	AND	reduce by rule 15
	LT	reduce by rule 15
	LEQ	reduce by rule 15
	EQ	reduce by rule 15
	GT	reduce by rule 15
	GEQ	reduce by rule 15
	NEQ	reduce by rule 15
	PLUS	reduce by rule 15
	MINUS	reduce by rule 15
	TIMES	reduce by rule 15
	DIV	reduce by rule 15
	MOD	reduce by rule 15
	OR	reduce by rule 15
	DO	reduce by rule 15


	.	error


state 48:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 13)
	exp : exp . OR exp 
	exp : exp . TIMES exp 
	exp : exp . DIV exp 
	exp : exp . MOD exp 
	exp : exp . AND exp 
	exp : exp . LT exp 
	exp : exp . LEQ exp 
	exp : exp . EQ exp 
	exp : exp . GT exp 
	exp : exp . GEQ exp 
	exp : exp . NEQ exp 

	THEN	reduce by rule 13
	EOS	reduce by rule 13
	RPAR	reduce by rule 13
	AND	reduce by rule 13
	LT	reduce by rule 13
	LEQ	reduce by rule 13
	EQ	reduce by rule 13
	GT	reduce by rule 13
	GEQ	reduce by rule 13
	NEQ	reduce by rule 13
	PLUS	reduce by rule 13
	MINUS	reduce by rule 13
	TIMES	shift 23
	DIV	shift 22
	MOD	shift 21
	OR	reduce by rule 13
	DO	reduce by rule 13


	.	error


state 49:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 12)
	exp : exp . MINUS exp 
	exp : exp . OR exp 
	exp : exp . TIMES exp 
	exp : exp . DIV exp 
	exp : exp . MOD exp 
	exp : exp . AND exp 
	exp : exp . LT exp 
	exp : exp . LEQ exp 
	exp : exp . EQ exp 
	exp : exp . GT exp 
	exp : exp . GEQ exp 
	exp : exp . NEQ exp 

	THEN	reduce by rule 12
	EOS	reduce by rule 12
	RPAR	reduce by rule 12
	AND	reduce by rule 12
	LT	reduce by rule 12
	LEQ	reduce by rule 12
	EQ	reduce by rule 12
	GT	reduce by rule 12
	GEQ	reduce by rule 12
	NEQ	reduce by rule 12
	PLUS	reduce by rule 12
	MINUS	reduce by rule 12
	TIMES	shift 23
	DIV	shift 22
	MOD	shift 21
	OR	reduce by rule 12
	DO	reduce by rule 12


	.	error


state 50:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . OR exp 
	exp : exp . TIMES exp 
	exp : exp . DIV exp 
	exp : exp . MOD exp 
	exp : exp . AND exp 
	exp : exp . LT exp 
	exp : exp . LEQ exp 
	exp : exp . EQ exp 
	exp : exp . GT exp 
	exp : exp . GEQ exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 24)

	THEN	reduce by rule 24
	EOS	reduce by rule 24
	RPAR	reduce by rule 24
	AND	reduce by rule 24
	LT	reduce by rule 24
	LEQ	reduce by rule 24
	EQ	reduce by rule 24
	GT	reduce by rule 24
	GEQ	reduce by rule 24
	NEQ	reduce by rule 24
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIV	shift 22
	MOD	shift 21
	OR	reduce by rule 24
	DO	reduce by rule 24


	.	error


state 51:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . OR exp 
	exp : exp . TIMES exp 
	exp : exp . DIV exp 
	exp : exp . MOD exp 
	exp : exp . AND exp 
	exp : exp . LT exp 
	exp : exp . LEQ exp 
	exp : exp . EQ exp 
	exp : exp . GT exp 
	exp : exp . GEQ exp 
	exp : exp GEQ exp .  (reduce by rule 23)
	exp : exp . NEQ exp 

	THEN	reduce by rule 23
	EOS	reduce by rule 23
	RPAR	reduce by rule 23
	AND	reduce by rule 23
	LT	reduce by rule 23
	LEQ	reduce by rule 23
	EQ	reduce by rule 23
	GT	reduce by rule 23
	GEQ	reduce by rule 23
	NEQ	reduce by rule 23
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIV	shift 22
	MOD	shift 21
	OR	reduce by rule 23
	DO	reduce by rule 23


	.	error


state 52:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . OR exp 
	exp : exp . TIMES exp 
	exp : exp . DIV exp 
	exp : exp . MOD exp 
	exp : exp . AND exp 
	exp : exp . LT exp 
	exp : exp . LEQ exp 
	exp : exp . EQ exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 22)
	exp : exp . GEQ exp 
	exp : exp . NEQ exp 

	THEN	reduce by rule 22
	EOS	reduce by rule 22
	RPAR	reduce by rule 22
	AND	reduce by rule 22
	LT	reduce by rule 22
	LEQ	reduce by rule 22
	EQ	reduce by rule 22
	GT	reduce by rule 22
	GEQ	reduce by rule 22
	NEQ	reduce by rule 22
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIV	shift 22
	MOD	shift 21
	OR	reduce by rule 22
	DO	reduce by rule 22


	.	error


state 53:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . OR exp 
	exp : exp . TIMES exp 
	exp : exp . DIV exp 
	exp : exp . MOD exp 
	exp : exp . AND exp 
	exp : exp . LT exp 
	exp : exp . LEQ exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 21)
	exp : exp . GT exp 
	exp : exp . GEQ exp 
	exp : exp . NEQ exp 

	THEN	reduce by rule 21
	EOS	reduce by rule 21
	RPAR	reduce by rule 21
	AND	reduce by rule 21
	LT	shift 31
	LEQ	shift 30
	EQ	reduce by rule 21
	GT	shift 28
	GEQ	shift 27
	NEQ	shift 26
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIV	shift 22
	MOD	shift 21
	OR	reduce by rule 21
	DO	reduce by rule 21


	.	error


state 54:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . OR exp 
	exp : exp . TIMES exp 
	exp : exp . DIV exp 
	exp : exp . MOD exp 
	exp : exp . AND exp 
	exp : exp . LT exp 
	exp : exp . LEQ exp 
	exp : exp LEQ exp .  (reduce by rule 20)
	exp : exp . EQ exp 
	exp : exp . GT exp 
	exp : exp . GEQ exp 
	exp : exp . NEQ exp 

	THEN	reduce by rule 20
	EOS	reduce by rule 20
	RPAR	reduce by rule 20
	AND	reduce by rule 20
	LT	reduce by rule 20
	LEQ	reduce by rule 20
	EQ	reduce by rule 20
	GT	reduce by rule 20
	GEQ	reduce by rule 20
	NEQ	reduce by rule 20
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIV	shift 22
	MOD	shift 21
	OR	reduce by rule 20
	DO	reduce by rule 20


	.	error


state 55:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . OR exp 
	exp : exp . TIMES exp 
	exp : exp . DIV exp 
	exp : exp . MOD exp 
	exp : exp . AND exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 19)
	exp : exp . LEQ exp 
	exp : exp . EQ exp 
	exp : exp . GT exp 
	exp : exp . GEQ exp 
	exp : exp . NEQ exp 

	THEN	reduce by rule 19
	EOS	reduce by rule 19
	RPAR	reduce by rule 19
	AND	reduce by rule 19
	LT	reduce by rule 19
	LEQ	reduce by rule 19
	EQ	reduce by rule 19
	GT	reduce by rule 19
	GEQ	reduce by rule 19
	NEQ	reduce by rule 19
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIV	shift 22
	MOD	shift 21
	OR	reduce by rule 19
	DO	reduce by rule 19


	.	error


state 56:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . OR exp 
	exp : exp . TIMES exp 
	exp : exp . DIV exp 
	exp : exp . MOD exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 18)
	exp : exp . LT exp 
	exp : exp . LEQ exp 
	exp : exp . EQ exp 
	exp : exp . GT exp 
	exp : exp . GEQ exp 
	exp : exp . NEQ exp 

	THEN	reduce by rule 18
	EOS	reduce by rule 18
	RPAR	reduce by rule 18
	AND	reduce by rule 18
	LT	shift 31
	LEQ	shift 30
	EQ	shift 29
	GT	shift 28
	GEQ	shift 27
	NEQ	shift 26
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIV	shift 22
	MOD	shift 21
	OR	reduce by rule 18
	DO	reduce by rule 18


	.	error


state 57:

	exp : WHILE exp DO . LSPAR cmdSeq RSPAR ENDWH 

	LSPAR	shift 61


	.	error


state 58:

	exp : LPAR exp RPAR .  (reduce by rule 26)

	THEN	reduce by rule 26
	EOS	reduce by rule 26
	RPAR	reduce by rule 26
	AND	reduce by rule 26
	LT	reduce by rule 26
	LEQ	reduce by rule 26
	EQ	reduce by rule 26
	GT	reduce by rule 26
	GEQ	reduce by rule 26
	NEQ	reduce by rule 26
	PLUS	reduce by rule 26
	MINUS	reduce by rule 26
	TIMES	reduce by rule 26
	DIV	reduce by rule 26
	MOD	reduce by rule 26
	OR	reduce by rule 26
	DO	reduce by rule 26


	.	error


state 59:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . OR exp 
	exp : exp . TIMES exp 
	exp : exp . DIV exp 
	exp : exp . MOD exp 
	exp : exp . AND exp 
	exp : exp . LT exp 
	exp : exp . LEQ exp 
	exp : exp . EQ exp 
	exp : exp . GT exp 
	exp : exp . GEQ exp 
	exp : exp . NEQ exp 
	decl : ID ASSIGN exp .  (reduce by rule 7)

	EOS	reduce by rule 7
	AND	shift 32
	LT	shift 31
	LEQ	shift 30
	EQ	shift 29
	GT	shift 28
	GEQ	shift 27
	NEQ	shift 26
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIV	shift 22
	MOD	shift 21
	OR	shift 20


	.	error


state 60:

	exp : IF exp THEN . LSPAR cmdSeq RSPAR ELSE LSPAR cmdSeq RSPAR ENDIF 

	LSPAR	shift 62


	.	error


state 61:

	exp : WHILE exp DO LSPAR . cmdSeq RSPAR ENDWH 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 15
	RSPAR	reduce by rule 2
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11
	READ	shift 10
	WRITE	shift 9

	cmdSeq	goto 63
	exp	goto 7
	cmd	goto 6
	decl	goto 5

	.	error


state 62:

	exp : IF exp THEN LSPAR . cmdSeq RSPAR ELSE LSPAR cmdSeq RSPAR ENDIF 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 15
	RSPAR	reduce by rule 2
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11
	READ	shift 10
	WRITE	shift 9

	cmdSeq	goto 64
	exp	goto 7
	cmd	goto 6
	decl	goto 5

	.	error


state 63:

	exp : WHILE exp DO LSPAR cmdSeq . RSPAR ENDWH 

	RSPAR	shift 65


	.	error


state 64:

	exp : IF exp THEN LSPAR cmdSeq . RSPAR ELSE LSPAR cmdSeq RSPAR ENDIF 

	RSPAR	shift 66


	.	error


state 65:

	exp : WHILE exp DO LSPAR cmdSeq RSPAR . ENDWH 

	ENDWH	shift 67


	.	error


state 66:

	exp : IF exp THEN LSPAR cmdSeq RSPAR . ELSE LSPAR cmdSeq RSPAR ENDIF 

	ELSE	shift 68


	.	error


state 67:

	exp : WHILE exp DO LSPAR cmdSeq RSPAR ENDWH .  (reduce by rule 28)

	THEN	reduce by rule 28
	EOS	reduce by rule 28
	RPAR	reduce by rule 28
	AND	reduce by rule 28
	LT	reduce by rule 28
	LEQ	reduce by rule 28
	EQ	reduce by rule 28
	GT	reduce by rule 28
	GEQ	reduce by rule 28
	NEQ	reduce by rule 28
	PLUS	reduce by rule 28
	MINUS	reduce by rule 28
	TIMES	reduce by rule 28
	DIV	reduce by rule 28
	MOD	reduce by rule 28
	OR	reduce by rule 28
	DO	reduce by rule 28


	.	error


state 68:

	exp : IF exp THEN LSPAR cmdSeq RSPAR ELSE . LSPAR cmdSeq RSPAR ENDIF 

	LSPAR	shift 69


	.	error


state 69:

	exp : IF exp THEN LSPAR cmdSeq RSPAR ELSE LSPAR . cmdSeq RSPAR ENDIF 

	IF	shift 18
	NUM	shift 17
	CONST	shift 16
	ID	shift 15
	RSPAR	reduce by rule 2
	NEGATE	shift 14
	LPAR	shift 13
	NOT	shift 12
	WHILE	shift 11
	READ	shift 10
	WRITE	shift 9

	cmdSeq	goto 70
	exp	goto 7
	cmd	goto 6
	decl	goto 5

	.	error


state 70:

	exp : IF exp THEN LSPAR cmdSeq RSPAR ELSE LSPAR cmdSeq . RSPAR ENDIF 

	RSPAR	shift 71


	.	error


state 71:

	exp : IF exp THEN LSPAR cmdSeq RSPAR ELSE LSPAR cmdSeq RSPAR . ENDIF 

	ENDIF	shift 72


	.	error


state 72:

	exp : IF exp THEN LSPAR cmdSeq RSPAR ELSE LSPAR cmdSeq RSPAR ENDIF .  (reduce by rule 27)

	THEN	reduce by rule 27
	EOS	reduce by rule 27
	RPAR	reduce by rule 27
	AND	reduce by rule 27
	LT	reduce by rule 27
	LEQ	reduce by rule 27
	EQ	reduce by rule 27
	GT	reduce by rule 27
	GEQ	reduce by rule 27
	NEQ	reduce by rule 27
	PLUS	reduce by rule 27
	MINUS	reduce by rule 27
	TIMES	reduce by rule 27
	DIV	reduce by rule 27
	MOD	reduce by rule 27
	OR	reduce by rule 27
	DO	reduce by rule 27


	.	error


state 73:


	EOF	accept


	.	error

496 of 766 action table entries left after compaction
41 goto table entries
